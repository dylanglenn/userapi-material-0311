{
	"info": {
		"_postman_id": "54711c55-4b63-4f0e-952d-9d00d14b6cb2",
		"name": "UserAPI - Test Suite",
		"description": "API to create and manage user data. It allows users to register, login and get/update/delete their data.\n\nThis test suite verifies that all the endpoints of the API are working correctly.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "29574936-54711c55-4b63-4f0e-952d-9d00d14b6cb2"
	},
	"item": [
		{
			"name": "Register a new user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9e0fbf14-c85b-429a-8efc-233e9043197f",
						"exec": [
							"pm.variables.set(\"rUserName\", pm.variables.replaceIn('{{$randomUserName}}'));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7e339a9b-fe7d-4e9f-aee3-d6906be62c49",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username was correctly set\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "49d21ec0-260d-49a2-9958-34474432719d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": [
				{
					"id": "8c380b4a-28f3-44e0-9360-672643a2adc0",
					"name": "User registered successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/register",
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "63aba2af-a9a7-46fd-9877-1a7f5c1bf6af",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Log in a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f1b6cd3-85d5-4cc6-abfe-e01e64580d79",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"Token is a string\", function(){",
							"\tpm.expect(jsonData.token).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});",
							"",
							"pm.variables.set(\"newUserID\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "fa2e8675-d172-4210-bfc7-4016f7474999",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{rUserName}}\",\n  \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						"login"
					]
				}
			},
			"response": [
				{
					"id": "831b298f-3bbd-4c3a-8532-37cbff9721a5",
					"name": "User logged in successfully",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "/v1/users/login",
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"token\": \"<string>\"\n}"
				},
				{
					"id": "316cc42a-65bc-4b5a-bdd7-6e574192af8f",
					"name": "Unauthorized",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "6cd910e9-9591-4574-ad30-119c0f3051f7",
					"name": "Error occurred",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Retrieve a user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8be748d-3296-4c13-835e-92bcd5a1e6f7",
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Response is an object\", function() {",
							"\tpm.expect(jsonData).to.be.an('object')",
							"});",
							"",
							"pm.test(\"User id is a number\", function(){",
							"\tpm.expect(jsonData.id).to.be.a(\"number\");",
							"});",
							"",
							"pm.test(\"User username is correct\", function(){",
							"\tpm.expect(jsonData.username).to.eql(pm.variables.replaceIn('{{rUserName}}'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "24b9132b-eb63-4752-8dfc-213ed70278c6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "2c70765e-5f90-4b6e-8cd4-8d51850add1e",
					"name": "Successful operation",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "/v1/users/:id",
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\"\n}"
				},
				{
					"id": "fd76d906-aa1b-4321-8637-270772da1095",
					"name": "User not found",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "a06602b9-8031-4b96-8849-c3e31c37fcfa",
					"name": "Error occurred",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Update a user",
			"id": "077cb537-7de1-4d73-94d2-f4c9a93c6e28",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "f00346b7-db91-4aa3-8f11-52549dbe4bdd",
					"name": "User updated successfully",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "2b831974-b892-428d-bf08-79a418a47e59",
					"name": "Error occurred",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		},
		{
			"name": "Delete a user",
			"id": "bdc6bc23-9b03-411d-be0f-d34b04df4cb0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/v1/users/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"users",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{newUserID}}"
						}
					]
				}
			},
			"response": [
				{
					"id": "a289a32e-5e48-470c-8eea-a5f409d13e23",
					"name": "User deleted successfully",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				},
				{
					"id": "015f5ab3-493c-49db-9448-eb362dff871f",
					"name": "Error occurred",
					"originalRequest": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "X-API-Key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"message\": \"<string>\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "165f33a9-739a-42d2-a9ca-8bfb74265ec8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a8e4b8a4-6f14-4909-98ce-34f798132cff",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 800ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(800);",
					"});",
					"",
					"pm.test(\"Successful request\", ()=> { ",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
					"});",
					""
				]
			}
		}
	]
}